# Q. What is this file?
# A. This file contains options which allow you to configure your multiworld experience while allowing
#    others to play how they want as well.
#
# Q. How do I use it?
# A. The options in this file are weighted. This means the higher number you assign to a value, the
#    more chances you have for that option to be chosen. For example, an option like this:
#
#    map_shuffle:
#      on: 5
#      off: 15
#
#    Means you have 5 chances for map shuffle to occur, and 15 chances for map shuffle to be turned
#    off.
#
# Q. I've never seen a file like this before. What characters am I allowed to use?
# A. This is a .yaml file. You are allowed to use most characters.
#    To test if your yaml is valid or not, you can use this website:
#        http://www.yamllint.com/
#    You can also verify that your Archipelago options are valid at this site:
#        https://archipelago.gg/check

# Your name in-game, limited to 16 characters.
#     {player} will be replaced with the player's slot number.
#     {PLAYER} will be replaced with the player's slot number, if that slot number is greater than 1.
#     {number} will be replaced with the counter value of the name.
#     {NUMBER} will be replaced with the counter value of the name, if the counter value is greater than 1.
name: Yellow

# Used to describe your yaml. Useful if you have multiple files.
description: Default Pokemon Black and White Template

game: Pokemon Black and White
requires:
  version: 0.6.3 # Version of Archipelago required for this yaml to work as expected.

Pokemon Black and White:
  ################
  # Game Options #
  ################
  progression_balancing:
    # A system that can move progression earlier, to try and prevent the player from getting stuck and bored early.
    # 
    # A lower setting means more getting stuck. A higher setting means less getting stuck.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 99
    random: 0
    random-low: 0
    random-high: 0
    25: 50
    disabled: 0 # equivalent to 0
    normal: 0 # equivalent to 50
    extreme: 0 # equivalent to 99

  accessibility:
    # Set rules for reachability of your items/locations.
    # 
    # **Full:** ensure everything can be reached and acquired.
    # 
    # **Minimal:** ensure what is needed to reach your goal can be acquired.
    full: 50
    minimal: 0

  version:
    # Select your game version.
    black: 0
    white: 50
    random: 0

  goal:
    # Determines what your goal is to consider the game beaten.
    # - **Ghetsis** - Clear the main story by defeating Ghetsis
    # - **Champion** - Become the champion by defeating Alder
    # - **Cynthia** - Defeat Cynthia in Undella Town
    # - **Cobalion** - Reach and defeat/catch Cobalion in Mistralton Cave
    # - **TM/HM hunt** - Get all TMs and HMs
    # - **Seven Sages hunt** - Find the Seven Sages
    # - **Legendary hunt** - Find and defeat/catch all (stationary available) legendary encounters, including Volcarona
    # - **Pokemon master** - Complete the requirements of all other goals combined
    ghetsis: 50
    champion: 0
    cynthia: 0
    cobalion: 0
    tmhm_hunt: 0
    seven_sages_hunt: 0
    legendary_hunt: 0
    pokemon_master: 0

  randomize_wild_pokemon:
    # Randomizes wild pokemon encounters.
    # 
    # - **Randomize** - Toggles wild pokemon being randomized. Required for any other modifier below.
    # - **Ensure all obtainable** - Ensures that every pokemon species is obtainable by either catching or evolving. This is automatically checked if **National pokedex** is chosen as the goal.
    # - **Similar base stats** - Tries to keep every randomized pokemon at a similar base stat total as the replaced encounter.
    # - **Type themed areas** - Tries to make every pokemon in an area have a certain same type.
    # - **Area 1-to-1** - Keeps the amount of different encounters and their encounter rate in every area.
    # - **Merge phenomenons** - Makes rustling grass, rippling water spots, dust clouds, and flying shadows in the same area have only one encounter. Takes priority over **Area 1-to-1**.
    # - **Prevent rare encounters** - Randomizes the encounter slots with the lowest chance in each area to the same pokemon. Takes priority over **Area 1-to-1**.
    # 
    # It is **highly recommended** to include **Prevent rare encounters** if you want to randomize wild pokemon,
    # else you might find yourself searching for two 1% encounters on every route.
    []

  randomize_trainer_pokemon:
    # Randomizes trainer pokemon.
    # - **Randomize** - Toggles trainer pokemon being randomized. Required for any modifier below.
    # - **Similar base stats** - Tries to keep the randomized pokemon at a similar base stat total as the replaced one.
    []

  pokemon_randomization_adjustments:
    # Adjust various parameters in various pokemon randomization options (more modifiers are planned).
    # Any minimum parameter cannot be higher than its corresponding maximum parameter.
    # - **Stats leniency** - The minimum difference between base stat totals of vanilla and randomized species (for options with **Similar base stats** activated). Allowed values are integers in range 0 to 1530.
    Stats leniency: 10

  encounter_plando:
    # Places specific pokemon species at specific locations. Every entry follows the following format:
    # ```
    # - map: Name of map
    #   seasons: Season name(s), optional
    #   method: Grass/Dark grass/...
    #   slots: Slot number(s) (0-11), optional
    #   species: Name(s) of species, random if multiple
    # ```
    # Encounter Plando requires the corresponding host setting to be enabled, else it will be ignored for all players.
    # Be aware that this can lead to generation failures when combined with other restrictive options.
    # Refer to the Encounter Plando guide of this game for further information.
    []

  shuffle_badges:
    # Determines how gym badges are randomized and what items gym badge locations can have.
    # - **Vanilla** - Gym badges will stay at their vanilla locations.
    # - **Shuffle** - Gym badges are shuffled between the gym leaders.
    # - **Any badge** - Puts the badges into the item pool, while only allowing items that have the word "badge" in their name (which also applies to gym badges of other games/worlds) being placed at gym leaders.
    # - **Anything** - Gym badges can be anywhere and gym leaders can give any item.
    vanilla: 0
    shuffle: 50
    any_badge: 0
    anything: 0

  shuffle_tm_hm:
    # Determines what items NPCs, who would normally give TMs or HMs, can have.
    # - **Shuffle** - These NPCs will always give a TM or HM from the same world.
    # - **HM with Badge** - Like "Shuffle", but puts each HM (and TM70 Flash) at a gym leader's badge reward (including the TM from Clay on route 6).
    # - **Any TM/HM** - These NPCs will give any item that starts with "TM" or "HM" followed by any digit (which also applies to TMs and HMs of other games/worlds).
    # - **Anything** - No restrictions.
    shuffle: 50
    hm_with_badge: 0
    any_tm_hm: 0
    anything: 0

  dexsanity:
    # Adds a number of locations that can be checked by catching a certain pokemon species
    # and registering it in the pokedex. The actual maximum number of added checks depends on what pokemon species are
    # actually obtainable in the wild.
    # 
    # If you want to have all 649 possible checks, then you need to randomize wild
    # encounters and add the **Ensure all obtainable** modifier.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 649
    0: 50
    random: 0
    random-low: 0
    random-high: 0

  season_control:
    # Determines how seasons are handled by the game.
    # - **Vanilla** - Seasons are not randomized and change based on real time. Locations that depend on the season will only contain filler items.
    # - **Changeable** - The current season can be changed by an NPC next to the Pokemon Center in Nimbasa City.
    # - **Randomized** - All seasons are unlockable by items that get shuffled into the item pool. They can as well be changed by an NPC in Nimbasa City, with one season being unlocked from the beginning.
    vanilla: 50
    changeable: 0
    randomized: 0

  adjust_levels:
    # Adjusts the levels of wild and trainer pokemon in areas that are in AP earlier accessible than in vanilla
    # to not be significantly higher than in surrounding areas (regardless of randomization).
    # 
    # - **Wild** - Normalizes wild pokemon levels, including surfing and fishing encounters.
    # - **Trainer** - Normalizes trainer pokemon levels, excluding Cynthia.
    ['Wild', 'Trainer']

  modify_levels:
    # Modifies the level of all trainer and/or wild pokemon. You can choose a certain mode for each type of encounter.
    # This is applied **after Adjust Levels**.
    # The mode decides how to apply the value to every pokemon. You can write either the name of the mode
    # or the corresponding number:
    # - **Multiply** or **0** - Multiply each level with value being seen as a percentage, i.e. 100 means no modifying. Allowed values are in range 1 to 10000.
    # - **Add** or **1** - Add the value directly to each level (with negative values being allowed), i.e. 0 means no modifying. Allowed values are in range -99 to 99.
    # - **Power** or **2** - Raise each level to the power of the value (which is seen as a percentage), i.e. 100 means no modifying. Allowed values are in range 1 to 700.
    Trainer mode: 0
    Trainer value: 100
    Wild mode: 0
    Wild value: 100

  master_ball_seller:
    # Adds the possibility to buy or obtain an unlimited amount of Master Balls.
    # You can select multiple sellers.
    # If multiple cost modifiers are added, a random cost in range between them (snapped to 500-steps) gets selected.
    # Adding no cost modifier defaults to 3000.
    # 
    # - **Ns Castle** - Repurposes an NPC in N's Castle, who can be found in the same room as the grunt giving Ultra Balls to the player, to give/sell Master Balls to the player.
    # - **PC** - Adds an option to every PC in Pokémon Centers to buy/obtain Master Balls.
    # - **Cherens Mom** - Repurposes Cheren's Mom in Nuvema Town to give/sell Master Balls.
    # - **Undella Mansion seller** - Adds the Master Ball to the pool of items that you can buy from the evolution items seller in the Undella Mansion for a random price. His offers are not affected by any cost modifier.
    # - **Cost Free** - Makes Master Balls (potentially) cost nothing.
    # - **Cost x** - Makes Master Balls (potentially) cost x Pokédollars. x can be any number in range of 0 to 30000.
    []

  modify_item_pool:
    # Modifies what items your world puts into the item pool.
    # 
    # - **Useless key items** - Adds one of each unused key item with filler classification.
    # - **Useful filler** - Main bag items that would normally occur only once can be generated multiple times.
    # - **Ban bad filler** - Bans niche berries and mail from being generated as filler items.
    []

  modify_logic:
    # Modifies parts of what's logically required for various locations.
    # 
    # - **Require Dowsing Machine** - Makes the Dowsing Machine a logical requirement to find hidden items.
    # - **Prioritize key item locations** - Marks locations, that normally contain key items (which also includes
    #                                       badge rewards in gyms), as priority locations, making them mostly contain
    #                                       progressive items.
    # - **Require Flash** - Makes Mistralton Cave and Challenger's Cave logically require TM70 Flash.
    ['Require Dowsing Machine', 'Prioritize key item locations', 'Require Flash']

  reusable_tms:
    # Enables reusable TMs, allowing for the reuse of TMs.
    'on': 50
    'yes': 0
    of_course: 0
    im_not_a_masochist: 0

  ###########################
  # Item & Location Options #
  ###########################
  local_items:
    # Forces these items to be in their native world.
    []

  non_local_items:
    # Forces these items to be outside their native world.
    []

  start_inventory:
    # Start with these items.
    {}

  start_hints:
    # Start with these item's locations prefilled into the ``!hint`` command.
    []

  start_location_hints:
    # Start with these locations and their item prefilled into the ``!hint`` command.
    []

  exclude_locations:
    # Prevent these locations from having an important item.
    []

  priority_locations:
    # Prevent these locations from having an unimportant item.
    []

  item_links:
    # Share part of your item pool with other players.
    []

  plando_items:
    # Generic items plando.
    []

