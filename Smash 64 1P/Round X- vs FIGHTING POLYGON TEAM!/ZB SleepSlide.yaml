# Q. What is this file?
# A. This file contains options which allow you to configure your multiworld experience while allowing
#    others to play how they want as well.
#
# Q. How do I use it?
# A. The options in this file are weighted. This means the higher number you assign to a value, the
#    more chances you have for that option to be chosen. For example, an option like this:
#
#    map_shuffle:
#      on: 5
#      off: 15
#
#    Means you have 5 chances for map shuffle to occur, and 15 chances for map shuffle to be turned
#    off.
#
# Q. I've never seen a file like this before. What characters am I allowed to use?
# A. This is a .yaml file. You are allowed to use most characters.
#    To test if your yaml is valid or not, you can use this website:
#        http://www.yamllint.com/
#    You can also verify that your Archipelago options are valid at this site:
#        https://archipelago.gg/check

# Your name in-game, limited to 16 characters.
#     {player} will be replaced with the player's slot number.
#     {PLAYER} will be replaced with the player's slot number, if that slot number is greater than 1.
#     {number} will be replaced with the counter value of the name.
#     {NUMBER} will be replaced with the counter value of the name, if the counter value is greater than 1.
name: SleepSlide

# Used to describe your yaml. Useful if you have multiple files.
description: Default Star Wars Episode I Racer Template

game: Star Wars Episode I Racer
requires:
  version: 0.6.3 # Version of Archipelago required for this yaml to work as expected.

Star Wars Episode I Racer:
  ################
  # Game Options #
  ################
  progression_balancing:
    # A system that can move progression earlier, to try and prevent the player from getting stuck and bored early.
    # 
    # A lower setting means more getting stuck. A higher setting means less getting stuck.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 99
    random: 0
    random-low: 0
    random-high: 0
    disabled: 0 # equivalent to 0
    normal: 50 # equivalent to 50
    extreme: 0 # equivalent to 99

  accessibility:
    # Set rules for reachability of your items/locations.
    # 
    # **Full:** ensure everything can be reached and acquired.
    # 
    # **Minimal:** ensure what is needed to reach your goal can be acquired.
    full: 50
    minimal: 0

  progressive_parts:
    # Pod racer parts will always be the next level upgrade
    'false': 50
    'true': 0

  no_traction_upgrades:
    # Removes Traction parts from the item pool
    'false': 50
    'true': 0

  course_unlock_mode:
    # Sets how courses should unlock
    # Circuit Pass: Semi-pro and Galactic Circuits are accessed by items called 'circuit passes'. Courses unlock normally as you beat the previous course
    # Circuit Pass Invitational: Same as Circuit Pass but with the addition of the Invitational Circuit
    # Shuffle: Course unlocks are shuffled
    circuit_pass: 50
    circuit_pass_invitational: 0
    shuffle: 0

  progressive_circuits:
    # Access to circuits will be in the regular order
    # Only applies when using Circuit Pass or Circuit Pass Invitational unlock modes
    'false': 50
    'true': 0

  randomize_starting_racers:
    # Changes which racers are available to use at the beginning
    'false': 0
    'true': 50

  starting_racers_count:
    # How many random racers to start with
    # This option is only used if 'Randomize Starting Racers' is enabled
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 23
    6: 50
    random: 0
    random-low: 0
    random-high: 0

  starting_racers_plando:
    # List of specific racers with which to start
    # This option is only used if 'Randomize Starting Racers' is enabled
    []

  max_additional_racers:
    # How many racers can be added to the pool (excluding the starting racers)
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 22
    22: 50
    random: 0
    random-low: 0
    random-high: 0

  mirrored_tracks:
    # How many tracks should be mirrored
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 25
    0: 50
    random: 0
    random-low: 0
    random-high: 0

  disable_part_damage:
    # Prevents parts from being damaged and removes pit droids from the item pool
    # This does not remove the pit droid shop checks, just the pit droids themselves
    # Extra money will be added to the pool to compensate
    'false': 0
    'true': 50

  ai_scaling:
    # Affects AI speed
    # Vanilla: Courses use their default scaling, which may result in tough races early on
    # Circuits: AI is scaled according to the current circuit
    # Parts: AI is dynamically scaled according to the quality of your parts
    vanilla: 0
    circuits: 50
    parts: 0

  additional_ai_multiplier:
    # Applies additional scaling to AI
    # 1000 = 1.000
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 100
    # Maximum value is 5000
    1000: 50
    random: 0
    random-low: 0
    random-high: 0

  enable_multiplier_control:
    # Allows the player to change the additional AI multiplier in-game
    'false': 0
    'true': 50

  one_lap_mode:
    # Races only require 1 lap to complete
    'false': 50
    'true': 0

  auto_hint_shop:
    # Automatically hints shop items as they unlock
    'false': 50
    'true': 0

  shop_costs:
    # Sets the cost of items at Watto's shop
    # Vanilla: Prices are unchanged. Some may require grinding truguts to afford
    # Normalized: Prices are much closer together, with some categories being slightly more expensive than others
    # Tiered: Each tier of any part type is an identical cost to that of other parts. This is the cheapest option
    vanilla: 50
    normalized: 0
    tiered: 0

  shop_cost_multiplier:
    # Additional multiplier for shop costs
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 10
    1: 50
    random: 0
    random-low: 0
    random-high: 0

  course_plando:
    # Sets specific courses
    # For mirrored, append ' (Mirrored)' to any course name
    # Repeated courses will cause errors
    {}

  deathlink_amnesty:
    # Amount of times you can crash your pod before sending a DeathLink to the server
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 50
    0: 50
    random: 0
    random-low: 0
    random-high: 0

  deathlink:
    # When you die, everyone who enabled death link dies. Of course, the reverse is true too.
    'false': 50
    'true': 0

  ###########################
  # Item & Location Options #
  ###########################
  local_items:
    # Forces these items to be in their native world.
    []

  non_local_items:
    # Forces these items to be outside their native world.
    []

  start_inventory:
    # Start with these items.
    {}

  start_hints:
    # Start with these item's locations prefilled into the ``!hint`` command.
    []

  start_location_hints:
    # Start with these locations and their item prefilled into the ``!hint`` command.
    []

  exclude_locations:
    # Prevent these locations from having an important item.
    []

  priority_locations:
    # Prevent these locations from having an unimportant item.
    []

  item_links:
    # Share part of your item pool with other players.
    []

  plando_items:
    # Generic items plando.
    []

