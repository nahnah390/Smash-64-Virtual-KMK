# Q. What is this file?
# A. This file contains options which allow you to configure your multiworld experience while allowing
#    others to play how they want as well.
#
# Q. How do I use it?
# A. The options in this file are weighted. This means the higher number you assign to a value, the
#    more chances you have for that option to be chosen. For example, an option like this:
#
#    map_shuffle:
#      on: 5
#      off: 15
#
#    Means you have 5 chances for map shuffle to occur, and 15 chances for map shuffle to be turned
#    off.
#
# Q. I've never seen a file like this before. What characters am I allowed to use?
# A. This is a .yaml file. You are allowed to use most characters.
#    To test if your yaml is valid or not, you can use this website:
#        http://www.yamllint.com/
#    You can also verify that your Archipelago options are valid at this site:
#        https://archipelago.gg/check

# Your name in-game, limited to 16 characters.
#     {player} will be replaced with the player's slot number.
#     {PLAYER} will be replaced with the player's slot number, if that slot number is greater than 1.
#     {number} will be replaced with the counter value of the name.
#     {NUMBER} will be replaced with the counter value of the name, if the counter value is greater than 1.
name: Diamond Shield

# Used to describe your yaml. Useful if you have multiple files.
description: Default Old School Runescape Template

game: Old School Runescape
requires:
  version: 0.6.3 # Version of Archipelago required for this yaml to work as expected.

Old School Runescape:
  ################
  # Game Options #
  ################
  progression_balancing:
    # A system that can move progression earlier, to try and prevent the player from getting stuck and bored early.
    # 
    # A lower setting means more getting stuck. A higher setting means less getting stuck.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 99
    random: 50
    random-low: 50
    random-high: 50
    disabled: 50 # equivalent to 0
    normal: 50 # equivalent to 50
    extreme: 50 # equivalent to 99

  accessibility:
    # Set rules for reachability of your items/locations.
    # 
    # **Full:** ensure everything can be reached and acquired.
    # 
    # **Minimal:** ensure what is needed to reach your goal can be acquired.
    full: 50
    minimal: 50

  starting_area:
    # Which chunks are available at the start. The player may need to move through locked chunks to reach the starting
    # area, but any areas that require quests, skills, or coins are not available as a starting location.
    # 
    # "Any Bank" rolls a random region that contains a bank.
    # Chunksanity can start you in any chunk. Hope you like woodcutting!
    lumbridge: 50
    al_kharid: 50
    varrock_east: 50
    varrock_west: 50
    edgeville: 50
    falador: 50
    draynor: 50
    wilderness: 50
    any_bank: 50
    chunksanity: 50

  brutal_grinds:
    # Whether to allow skill tasks without having reasonable access to the usual skill training path.
    # For example, if enabled, you could be forced to train smithing without an anvil purely by smelting bars,
    # or training fishing to high levels entirely on shrimp.
    'false': 50
    'true': 50

  progressive_tasks:
    # Whether skill tasks should always be generated in order of easiest to hardest.
    # If enabled, you would not be assigned "Mine Gold" without also being assigned
    # "Mine Silver", "Mine Coal", and "Mine Iron". Enabling this will result in a generally shorter seed, but with
    # a lower variety of tasks.
    'false': 50
    'true': 50

  enable_duds:
    # Whether to include filler "Dud" items that serve no purpose but allow for more tasks in the pool.
    'false': 50
    'true': 50

  dud_count:
    # How many "Dud" items to include in the pool. This setting is ignored if "Enable Duds" is not included
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 30
    10: 50
    random: 50
    random-low: 50
    random-high: 50

  enable_carepacks:
    # Whether or not to include useful "Care Pack" items that allow you to trade over specific items.
    # Note: Requires your account NOT to be an Ironman. Also, requires access to another account to trade over the items,
    # or gold to purchase off of the grand exchange.
    'false': 50
    'true': 50

  max_combat_level:
    # The highest combat level of monster to possibly be assigned as a task.
    # If set to 0, no combat tasks will be generated.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 1520
    50: 50
    random: 0
    random-low: 50
    random-high: 0

  max_combat_tasks:
    # The maximum number of Combat Tasks to possibly be assigned.
    # If set to 0, no combat tasks will be generated.
    # This only determines the maximum possible, fewer than the maximum could be assigned.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 16
    16: 50
    random: 50
    random-low: 50
    random-high: 50

  combat_task_weight:
    # How much to favor generating combat tasks over other types of task.
    # Weights of all Task Types will be compared against each other, a task with 50 weight
    # is twice as likely to appear as one with 25.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 99
    50: 50
    random: 50
    random-low: 50
    random-high: 50

  max_prayer_level:
    # The highest Prayer requirement of any task generated.
    # If set to 0, no Prayer tasks will be generated.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 99
    0: 50
    random: 0
    random-low: 0
    random-high: 0

  max_prayer_tasks:
    # The maximum number of Prayer Tasks to possibly be assigned.
    # If set to 0, no Prayer tasks will be generated.
    # This only determines the maximum possible, fewer than the maximum could be assigned.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 5
    0: 50
    random: 0
    random-low: 0
    random-high: 0

  prayer_task_weight:
    # How much to favor generating Prayer tasks over other types of task.
    # Weights of all Task Types will be compared against each other, a task with 50 weight
    # is twice as likely to appear as one with 25.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 99
    0: 50
    random: 0
    random-low: 0
    random-high: 0

  max_magic_level:
    # The highest Magic requirement of any task generated.
    # If set to 0, no Magic tasks will be generated.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 99
    50: 50
    random: 50
    random-low: 50
    random-high: 50

  max_magic_tasks:
    # The maximum number of Magic Tasks to possibly be assigned.
    # If set to 0, no Magic tasks will be generated.
    # This only determines the maximum possible, fewer than the maximum could be assigned.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 7
    7: 50
    random: 50
    random-low: 50
    random-high: 50

  magic_task_weight:
    # How much to favor generating Magic tasks over other types of task.
    # Weights of all Task Types will be compared against each other, a task with 50 weight
    # is twice as likely to appear as one with 25.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 99
    50: 50
    random: 50
    random-low: 50
    random-high: 50

  max_runecraft_level:
    # The highest Runecraft requirement of any task generated.
    # If set to 0, no Runecraft tasks will be generated.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 99
    50: 50
    random: 50
    random-low: 50
    random-high: 50

  max_runecraft_tasks:
    # The maximum number of Runecraft Tasks to possibly be assigned.
    # If set to 0, no Runecraft tasks will be generated.
    # This only determines the maximum possible, fewer than the maximum could be assigned.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 8
    8: 50
    random: 50
    random-low: 50
    random-high: 50

  runecraft_task_weight:
    # How much to favor generating Runecraft tasks over other types of task.
    # Weights of all Task Types will be compared against each other, a task with 50 weight
    # is twice as likely to appear as one with 25.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 99
    50: 50
    random: 50
    random-low: 50
    random-high: 50

  max_crafting_level:
    # The highest Crafting requirement of any task generated.
    # If set to 0, no Crafting tasks will be generated.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 99
    50: 50
    random: 50
    random-low: 50
    random-high: 50

  max_crafting_tasks:
    # The maximum number of Crafting Tasks to possibly be assigned.
    # If set to 0, no Crafting tasks will be generated.
    # This only determines the maximum possible, fewer than the maximum could be assigned.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 11
    11: 50
    random: 50
    random-low: 50
    random-high: 50

  crafting_task_weight:
    # How much to favor generating Crafting tasks over other types of task.
    # Weights of all Task Types will be compared against each other, a task with 50 weight
    # is twice as likely to appear as one with 25.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 99
    50: 50
    random: 50
    random-low: 50
    random-high: 50

  max_mining_level:
    # The highest Mining requirement of any task generated.
    # If set to 0, no Mining tasks will be generated.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 99
    0: 50
    random: 0
    random-low: 0
    random-high: 0

  max_mining_tasks:
    # The maximum number of Mining Tasks to possibly be assigned.
    # If set to 0, no Mining tasks will be generated.
    # This only determines the maximum possible, fewer than the maximum could be assigned.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 6
    0: 50
    random: 0
    random-low: 0
    random-high: 0

  mining_task_weight:
    # How much to favor generating Mining tasks over other types of task.
    # Weights of all Task Types will be compared against each other, a task with 50 weight
    # is twice as likely to appear as one with 25.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 99
    0: 50
    random: 0
    random-low: 0
    random-high: 0

  max_smithing_level:
    # The highest Smithing requirement of any task generated.
    # If set to 0, no Smithing tasks will be generated.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 99
    0: 50
    random: 0
    random-low: 0
    random-high: 0

  max_smithing_tasks:
    # The maximum number of Smithing Tasks to possibly be assigned.
    # If set to 0, no Smithing tasks will be generated.
    # This only determines the maximum possible, fewer than the maximum could be assigned.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 5
    0: 0
    random: 0
    random-low: 0
    random-high: 0

  smithing_task_weight:
    # How much to favor generating Smithing tasks over other types of task.
    # Weights of all Task Types will be compared against each other, a task with 50 weight
    # is twice as likely to appear as one with 25.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 99
    0: 50
    random: 0
    random-low: 0
    random-high: 0

  max_fishing_level:
    # The highest Fishing requirement of any task generated.
    # If set to 0, no Fishing tasks will be generated.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 99
    50: 50
    random: 50
    random-low: 50
    random-high: 50

  max_fishing_tasks:
    # The maximum number of Fishing Tasks to possibly be assigned.
    # If set to 0, no Fishing tasks will be generated.
    # This only determines the maximum possible, fewer than the maximum could be assigned.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 6
    6: 50
    random: 50
    random-low: 50
    random-high: 50

  fishing_task_weight:
    # How much to favor generating Fishing tasks over other types of task.
    # Weights of all Task Types will be compared against each other, a task with 50 weight
    # is twice as likely to appear as one with 25.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 99
    50: 50
    random: 50
    random-low: 50
    random-high: 50

  max_cooking_level:
    # The highest Cooking requirement of any task generated.
    # If set to 0, no Cooking tasks will be generated.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 99
    50: 50
    random: 50
    random-low: 50
    random-high: 50

  max_cooking_tasks:
    # The maximum number of Cooking Tasks to possibly be assigned.
    # If set to 0, no Cooking tasks will be generated.
    # This only determines the maximum possible, fewer than the maximum could be assigned.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 6
    6: 50
    random: 50
    random-low: 50
    random-high: 50

  cooking_task_weight:
    # How much to favor generating Cooking tasks over other types of task.
    # Weights of all Task Types will be compared against each other, a task with 50 weight
    # is twice as likely to appear as one with 25.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 99
    50: 50
    random: 50
    random-low: 50
    random-high: 50

  max_firemaking_level:
    # The highest Firemaking requirement of any task generated.
    # If set to 0, no Firemaking tasks will be generated.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 99
    50: 50
    random: 50
    random-low: 50
    random-high: 50

  max_firemaking_tasks:
    # The maximum number of Firemaking Tasks to possibly be assigned.
    # If set to 0, no Firemaking tasks will be generated.
    # This only determines the maximum possible, fewer than the maximum could be assigned.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 3
    3: 50
    random: 50
    random-low: 50
    random-high: 50

  firemaking_task_weight:
    # How much to favor generating Firemaking tasks over other types of task.
    # Weights of all Task Types will be compared against each other, a task with 50 weight
    # is twice as likely to appear as one with 25.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 99
    50: 50
    random: 50
    random-low: 50
    random-high: 50

  max_woodcutting_level:
    # The highest Woodcutting requirement of any task generated.
    # If set to 0, no Woodcutting tasks will be generated.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 99
    50: 50
    random: 50
    random-low: 50
    random-high: 50

  max_woodcutting_tasks:
    # The maximum number of Woodcutting Tasks to possibly be assigned.
    # If set to 0, no Woodcutting tasks will be generated.
    # This only determines the maximum possible, fewer than the maximum could be assigned.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 3
    3: 50
    random: 50
    random-low: 50
    random-high: 50

  woodcutting_task_weight:
    # How much to favor generating Woodcutting tasks over other types of task.
    # Weights of all Task Types will be compared against each other, a task with 50 weight
    # is twice as likely to appear as one with 25.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 99
    50: 50
    random: 50
    random-low: 50
    random-high: 50

  minimum_general_tasks:
    # How many guaranteed general progression tasks to be assigned (total level, total XP, etc.).
    # General progression tasks will be used to fill out any holes caused by having fewer possible tasks than needed, so
    # there is no maximum.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 49
    10: 50
    random: 50
    random-low: 50
    random-high: 50

  general_task_weight:
    # How much to favor generating General tasks over other types of task.
    # Weights of all Task Types will be compared against each other, a task with 50 weight
    # is twice as likely to appear as one with 25.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 99
    50: 50
    random: 50
    random-low: 50
    random-high: 50

  ###########################
  # Item & Location Options #
  ###########################
  local_items:
    # Forces these items to be in their native world.
    []

  non_local_items:
    # Forces these items to be outside their native world.
    []

  start_inventory:
    # Start with these items.
    {}

  start_hints:
    # Start with these item's locations prefilled into the ``!hint`` command.
    []

  start_location_hints:
    # Start with these locations and their item prefilled into the ``!hint`` command.
    []

  exclude_locations:
    # Prevent these locations from having an important item.
    []

  priority_locations:
    # Prevent these locations from having an unimportant item.
    []

  item_links:
    # Share part of your item pool with other players.
    []

  plando_items:
    # Generic items plando.
    []



