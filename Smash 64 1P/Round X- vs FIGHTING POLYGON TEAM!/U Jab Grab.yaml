# Q. What is this file?
# A. This file contains options which allow you to configure your multiworld experience while allowing
#    others to play how they want as well.
#
# Q. How do I use it?
# A. The options in this file are weighted. This means the higher number you assign to a value, the
#    more chances you have for that option to be chosen. For example, an option like this:
#
#    map_shuffle:
#      on: 5
#      off: 15
#
#    Means you have 5 chances for map shuffle to occur, and 15 chances for map shuffle to be turned
#    off.
#
# Q. I've never seen a file like this before. What characters am I allowed to use?
# A. This is a .yaml file. You are allowed to use most characters.
#    To test if your yaml is valid or not, you can use this website:
#        http://www.yamllint.com/
#    You can also verify that your Archipelago options are valid at this site:
#        https://archipelago.gg/check

# Your name in-game, limited to 16 characters.
#     {player} will be replaced with the player's slot number.
#     {PLAYER} will be replaced with the player's slot number, if that slot number is greater than 1.
#     {number} will be replaced with the counter value of the name.
#     {NUMBER} will be replaced with the counter value of the name, if the counter value is greater than 1.
name: Jab Grab

# Used to describe your yaml. Useful if you have multiple files.
description: Default The Legend of Zelda - Phantom Hourglass Template

game: The Legend of Zelda - Phantom Hourglass
requires:
  version: 0.6.3 # Version of Archipelago required for this yaml to work as expected.

The Legend of Zelda - Phantom Hourglass:
  ################
  # Game Options #
  ################
  progression_balancing:
    # A system that can move progression earlier, to try and prevent the player from getting stuck and bored early.
    # 
    # A lower setting means more getting stuck. A higher setting means less getting stuck.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 99
    random: 50
    random-low: 50
    random-high: 50
    disabled: 50 # equivalent to 0
    normal: 50 # equivalent to 50
    extreme: 50 # equivalent to 99

  accessibility:
    # Set rules for reachability of your items/locations.
    # 
    # **Full:** ensure everything can be reached and acquired.
    # 
    # **Minimal:** ensure what is needed to reach your goal can be acquired.
    # 
    # **Items:** ensure all logically relevant items can be acquired. Some items, such as keys, may be self-locking, and
    # some locations may be inaccessible.
    full: 50
    minimal: 50
    items: 50

  remove_items_from_pool:
    # Removes specified amount of given items from the item pool, replacing them with random filler items.
    # This option has significant chances to break generation if used carelessly, so test your preset several times
    # before using it on long generations. Use at your own risk!
    {}

  death_link:
    # When you die, everyone who enabled death link dies. Of course, the reverse is true too.
    'false': 50
    'true': 50

  ################
  # Goal Options #
  ################
  goal_requirements:
    # The goal to accomplish in order to unlock the endgame specified in 'bellum_access'
    # - Triforce_door: Open the triforce door on TotOK B6. Leftover from pre-alpha
    # - complete_dungeons: complete dungeons to unlock the endgame
    # - metal_hunt: collect a specified number of metals to unlock the endgame
    triforce_door: 0
    complete_dungeons: 50
    metal_hunt: 50

  bellum_access:
    # What unlocks after you reach your goal requirement. For bellum options, game completion is sent on entering the credits.
    # - spawn_phantoms_on_b13: getting your goal requirement spawns the phantoms on TotOK B13, and killing them gives     you bellum access. You will have to run TotOK to the bottom after getting your goal requirement
    # - unlock_staircase: getting your goal requirement unlocks the staircase to bellum. The phantoms on B13 spawn by
    # default, and killing them unlocks the warp for later
    # - warp_to_bellum: getting your goal requirement spawns the warp to bellum in TotOK. The phantoms are spawned by
    # default, and the staircase to bellum is blocked off until reaching the goal
    # - spawn_bellumbeck: getting your goal requirement spawns the ruins of the ghost ship in the SW quadrant, and you
    # can skip bellum 1 and the ghost ship fight
    # - win: reaching your goal requirement wins the game
    spawn_phantoms_on_b13: 50
    unlock_staircase: 50
    warp_to_bellum: 50
    spawn_bellumbeck: 50
    win: 50

  ###################
  # Dungeon Options #
  ###################
  dungeons_required:
    # How many dungeons are required to access the endgame.
    # Max is 6 unless you add Ghost ship and TotOK with their own options below
    # If metal hunt is enabled, this only effects what dungeons are excluded or not
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 8
    3: 50
    random: 50
    random-low: 50
    random-high: 50

  exclude_non_required_dungeons:
    # Non-required dungeons won't have progression or useful items. Does not apply to TotOK.
    'false': 50
    'true': 50

  ghost_ship_in_dungeon_pool:
    # Choose whether the ghost ship can be in the dungeon reward pool
    # - rescue_tetra: the dungeon reward, if rolled, will be on using the ghost key
    # - cubus_sisters: the dungeon reward will be on defeating the cubus sisters
    # - false: the ghost ship cannot be rolled for the required dungeon pool
    rescue_tetra: 50
    cubus_sisters: 50
    'false': 50

  totok_in_dungeon_pool:
    # Choose whether the NE Sea Chart chest on B13 of Temple of the Ocean King is in the dungeon reward pool
    'false': 50
    'true': 50

  ######################
  # Metal Hunt Options #
  ######################
  metal_hunt_required:
    # Number of metals required to win if metal hunt is enabled
    # The item group 'Metals' can be used to specify all metals for generic settings, like local_items
    # Setting too high of a value can max the item pool depending on other settings, this will fail generation
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 50
    20: 50
    random: 50
    random-low: 50
    random-high: 50

  metal_hunt_total:
    # Total number of metals in the pool if metals are enabled
    # If less than required metals, it is set to the required metal count
    # Setting too high of a value can max the item pool depending on other settings, this will fail generation
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 50
    25: 50
    random: 50
    random-low: 50
    random-high: 50

  #################
  # Logic Options #
  #################
  logic:
    # Logic options:
    # - Normal: Glitches not in logic.
    # - Hard: Includes some cool unconventional uses of pots, tricky enemy fights and Molida Archery 2000
    # - Glitched: Hammer clips, chu camera displacement and clever use of items in logic
    # Be careful, using glitches on normal logic can cause key-related softlocks
    # Full coverage of tricks included can be found here https://github.com/carrotinator/Archipelago/blob/main/worlds/tloz_ph/docs/tricks_and_skips.md
    normal: 50
    hard: 0
    glitched: 0

  phantom_combat_difficulty:
    # Option for what you need to kill phantoms in logic
    # - require_phantom_sword: need phantom sword
    # - require_traps: need a pit trap or boulder
    # - require_stun: require a method of stunning, and an open pit to push into. Includes bow, hammer,
    # and sword + 2 progressive spirits of power
    # - require_weapon: all of the above plus grappling hook
    require_phantom_sword: 50
    require_traps: 50
    require_stun: 50
    require_weapon: 50

  boat_requires_sea_chart:
    # If True, heading out to sea from mercay requires the SW sea chart.
    # WARNING! If set to False and you travel without a sea chart, you can't come back without warping to start.
    # Frogs require their sea chart to work
    'false': 0
    'true': 50

  ##############################
  # Item Randomization Options #
  ##############################
  keysanity:
    # Small Key Logic options
    # - vanilla: Keys are not randomized
    # - in_own_dungeon: Keys can be found in their own dungeon
    # - anywhere: Keysanity. Keys can be found anywhere
    # You can use the item group "Small Keys" to specify further key options
    vanilla: 50
    in_own_dungeon: 50
    anywhere: 50

  randomize_minigames:
    # Randomize the following minigames:
    # - Bannan Cannon Game
    # - Molida Archery
    # - Dee Ess Goron Game
    # - Maze Island Main Rewards
    # - Prince of Red Lions Fight
    # if the hint option is on, all minigame rewards will be hinted for on entering their scene
    no_minigames: 50
    randomize_with_hints: 50
    randomize_without_hints: 0

  randomize_frogs:
    # Ramdomize golden cyclone frogs
    # - vanilla: shooting a frog gives their warp spot
    # - start_with: start with all warps unlocked. Frogs are not checks. You don't start with cyclone slate unless it's
    # in starting_items. You also need their respective sea charts to actually warp.
    # - randomize: frog glyphs are random and frogs are checks
    vanilla: 50
    start_with: 50
    randomize: 50

  randomize_fishing:
    # Adds checks for catching the 6 fish you can catch at sea, and handing in 4 fish to the wayfarer on bannan island.
    # The hint option also gives free hints for the catching fish checks on entering the wayfarers hut on bannan island.
    no_fish: 50
    randomize_with_hints: 50
    randomize_without_hints: 0

  randomize_salvage:
    # Randomize all 31 treasure maps and salvage locations!
    # Hint option gives you a hint for the location on receiving the map item
    no_salvage: 50
    randomize_with_hints: 50
    randomize_without_hints: 0

  randomize_harrow:
    # Choose whether to randomize the rng hell checks on harrow island
    # If enabled, the hint option with give you hints on entering the island
    no_harrow: 50
    randomize_with_hints: 50
    randomize_without_hints: 0

  randomize_digs:
    # Randomize dig spots that give 100-300 rupees
    'false': 50
    'true': 50

  randomize_triforce_crest:
    # When enabled, The Triforce Crest on the big red door in TotOK B6 will turn into an item and be randomized.
    # When disabled, the door will always be open
    'false': 50
    'true': 50

  randomize_beedle_membership:
    # Adds locations to the five membership cards in Beedle's shop, point items to help reach their thresholds and adds
    # the Freebie Card, Complimentary Card and Compliment card to the pool
    # Point thresholds are at 0, 20, 50, 100 and 200.
    # - no_beedle_points: don't randomize this
    # - cards_only: adds the Freebie, Comploment and Complimentary cards to the item pool, but doesn't randomize
    # Membership thresholds
    # - randomize: randomizes the beedle membership levels. You will only be logically expected to buy the first level.
    # - randomize_with_grinding: randomizes the beedle membership levels. If you have a farmable source of rupees, the
    # game can expect you to farm 20 000 rupees and use time travelling to buy out his stock day after day. Don't pick
    # unless you know what you're signing up for
    no_beedle_points: 50
    cards_only: 50
    randomize: 50
    randomize_with_grinding: 0

  randomize_masked_beedle:
    # Choose whether to randomize the masked beedle ship. You may need to change time of day for this.
    # Masked beedle appears between 10pm and midnight on weekdays or 10am and noon on weekends.
    'false': 50
    'true': 50

  ################
  # Hint Options #
  ################
  dungeon_hints:
    # Receive hints for your required dungeons
    # - false: no hints
    # - oshus: oshus gives dungeon hints
    # - totok: entering totok gives dungeon hints
    'false': 0
    oshus: 50
    totok: 50

  shop_hints:
    # Get hints for shop items you currently can buy
    # Includes island shops, Beedle, masked Beedle and Eddo
    'false': 0
    'true': 50

  spirit_island_hints:
    # Get hints for spirit island upgrades on entering the shrine
    # - all: get hints for all upgrades
    # - level_two: only get hints for the 2nd level upgrades
    # - none: don't receive hints
    all: 50
    level_two: 50
    none: 0

  #################
  # World Options #
  #################
  fog_settings:
    # Choose when the fog exists in the NW Quadrant
    # WARNING! The game crashes if you exit out to the NW quadrant with the spirits out. Enter and exit the ghost ship to remove them
    # - no_fog: there's no fog in the NW quadrant. You need all 3 spirits to find the ghost ship
    # - vanilla_fog: fog exists until you defeat the ghost ship, you have to take the twisty route to NW
    # - open_ghost_ship: fog exists until you beat the ghost ship, and you don't need the spirit items to find it.
    no_fog: 50
    vanilla_fog: 50
    open_ghost_ship: 50

  skip_ocean_fights:
    # The Massive Eye fight before Goron Island, ice pillars around Isle of Frost and Giant Eye Plant before Bannan trade
    # quest item are removed, and cannon isn't required for those locations
    'false': 50
    'true': 50

  zauz_required_metals:
    # How many rare metals you need to have obtained for zauz to give the phantom blade forging check
    # If the value is greater than the number of required dungeons/total metal hunt items, the value will be the number
    # of dungeons/total metals
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 30
    3: 50
    random: 50
    random-low: 50
    random-high: 50

  dungeon_shortcuts:
    # EXPERIMENTAL!!! Use at your own risk!
    # Adds shortcuts from the beginning of islands to their dungeons, often by entering the house nearest their port.
    # Requires getting the first check in the respective dungeon to activate.
    # Disabled automatically with house ER or internal island ER (and dungeon ER until i add support for it)
    'false': 50
    'true': 0

  ######################
  # Spirit Gem Options #
  ######################
  spirit_gem_packs:
    # Instead of having 20 individual spirit gems of each type, you get them in packs of n
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 20
    1: 50
    random: 50
    random-low: 50
    random-high: 50

  additional_spirit_gems:
    # Adds additional spirit gems/packs to the pool.
    # At 0 there will be exactly enough to get both upgrade locations
    # Can cause generation errors if too many locations are excluded
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 5
    0: 50
    random: 50
    random-low: 50
    random-high: 50

  ######################
  # TotOK Time Options #
  ######################
  ph_time_logic:
    # Logic Requirements for Sand of Hours in Temple of the Ocean King
    # - beginner: double the time requirement of easy. Expects you to get everything with ~10 minutes
    # - easy: each check has a time requirement based on walking to each location. Does not take yellow pots into account.
    # Expects you to get everything with ~5 minutes
    # - medium: half of the easy times. Expects you to get everything with ~2.5 minutes
    # - hard: a quarter of the easy times. Expects you to get everything with ~1.25 minutes
    # - ph_only_b1: only the phantom hourglass item is required for checks past b1, checks above that are always in logic
    # - ph_only_b4: only the phantom hourglass item is required for checks past b4, checks above that are always in logic
    # - no_logic: Sand of Hours does not effect logic
    beginner: 0
    easy: 50
    medium: 0
    hard: 0
    ph_only_b1: 0
    ph_only_b4: 0
    no_logic: 0

  ph_required:
    # Whether you need the phantom hourglass to make use of Sand of Hours.
    # If false the Phantom Hourglass functions like one big optional time item.
    # Hearts still count for time logic if True
    'false': 50
    'true': 50

  ph_starting_time:
    # How much time given by the Phantom Hourglass item. There is one in the pool.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 5999
    600: 50
    random: 0
    random-low: 0
    random-high: 50

  ph_heart_time:
    # How much to value hearts as sand in Temple of the Ocean King, in seconds.
    # Counts 2 out of your 3 starting hearts.
    # Standing in the open, each heart depletes after 9 seconds.
    # Keep in mind that hearts in pots respawn infinitely
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 60
    0: 50
    random: 50
    random-low: 50
    random-high: 50

  ph_time_increment:
    # How much time to get for each sand of hours upgrade, in seconds. It will try and create more upgrades items than you need.
    # You don't need to have found the Phantom Hourglass to make use of the upgrades
    # If you exclude as many locations as possible, and have 30 metal items, generation breaks at 6 seconds
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 5999
    60: 50
    random: 50
    random-low: 50
    random-high: 50

  ###############################
  # Entrance Randomizer Options #
  ###############################
  shuffle_dungeon_entrances:
    # EXPERIMENTAL!!! Use at your own risk!
    # Shuffle what dungeon entrance leads to which dungeon interior.
    # Does not include ghost ship.
    # Full entrance rando coming soon!
    'false': 50
    'true': 0

  ####################
  # Cosmetic Options #
  ####################
  additional_metal_names:
    # If there are more than 3 rare metals in the pool, what should the additional items be called?
    # - vanilla_only: additional metals are duplicate vanilla metals
    # - additional_rare_metal: additional metals are all called "Additional Rare Metal"
    # - custom_metals: additional metals are chosen randomly from a pre-defined list of names I made up. The names are
    # based on color words ending in "ine". Some examples are "Verdantine", "Lavendine" and "Amberine". Currently there
    # 30 metal names defined.
    # - custom_metals_unique: same as custom metals, but there can only be 1 of each item. Additional metals will be
    # named "Additional Rare Metal"
    vanilla_only: 50
    additional_rare_metal: 50
    custom: 50
    custom_unique: 50

  ###########################
  # Item & Location Options #
  ###########################
  local_items:
    # Forces these items to be in their native world.
    []

  non_local_items:
    # Forces these items to be outside their native world.
    []

  start_inventory:
    # Start with these items.
    {}

  start_inventory_from_pool:
    # Start with these items and don't place them in the world.
    # 
    # The game decides what the replacement items will be.
    {}

  start_hints:
    # Start with these item's locations prefilled into the ``!hint`` command.
    []

  start_location_hints:
    # Start with these locations and their item prefilled into the ``!hint`` command.
    []

  exclude_locations:
    # Prevent these locations from having an important item.
    []

  priority_locations:
    # Prevent these locations from having an unimportant item.
    []

  item_links:
    # Share part of your item pool with other players.
    []

  plando_items:
    # Generic items plando.
    []



