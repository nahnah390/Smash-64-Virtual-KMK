# Q. What is this file?
# A. This file contains options which allow you to configure your multiworld experience while allowing
#    others to play how they want as well.
#
# Q. How do I use it?
# A. The options in this file are weighted. This means the higher number you assign to a value, the
#    more chances you have for that option to be chosen. For example, an option like this:
#
#    map_shuffle:
#      on: 5
#      off: 15
#
#    Means you have 5 chances for map shuffle to occur, and 15 chances for map shuffle to be turned
#    off.
#
# Q. I've never seen a file like this before. What characters am I allowed to use?
# A. This is a .yaml file. You are allowed to use most characters.
#    To test if your yaml is valid or not, you can use this website:
#        http://www.yamllint.com/
#    You can also verify that your Archipelago options are valid at this site:
#        https://archipelago.gg/check

# Your name in-game, limited to 16 characters.
#     {player} will be replaced with the player's slot number.
#     {PLAYER} will be replaced with the player's slot number, if that slot number is greater than 1.
#     {number} will be replaced with the counter value of the name.
#     {NUMBER} will be replaced with the counter value of the name, if the counter value is greater than 1.
name: Green Yoshi

# Used to describe your yaml. Useful if you have multiple files.
description: Default Tetris Attack Template

game: Tetris Attack
requires:
  version: 0.6.3 # Version of Archipelago required for this yaml to work as expected.

Tetris Attack:
  ################
  # Game Options #
  ################
  progression_balancing:
    # A system that can move progression earlier, to try and prevent the player from getting stuck and bored early.
    # 
    # A lower setting means more getting stuck. A higher setting means less getting stuck.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 99
    random: 0
    random-low: 0
    random-high: 0
    disabled: 0 # equivalent to 0
    normal: 50 # equivalent to 50
    extreme: 0 # equivalent to 99

  accessibility:
    # Set rules for reachability of your items/locations.
    # 
    # **Full:** ensure everything can be reached and acquired.
    # 
    # **Minimal:** ensure what is needed to reach your goal can be acquired.
    full: 50
    minimal: 0

  starter_pack:
    # This provides a set of stages and puzzles to start with.
    # If you're doing Stage Clear only and you don't start in Round 6, the Last Stage will be in Round 6.
    # Starting with only one Stage Clear round has all 5 stages in that round unlocked.
    # Starting with only one Puzzle level has all 10 puzzles in that level unlocked.
    # If there are only extra puzzles and no regular puzzles, the starter level is corrected as such.
    # Vs Two Stages gives stages 1 and 2.
    stage_clear_round_1: 50
    stage_clear_round_2: 0
    stage_clear_round_3: 0
    stage_clear_round_4: 0
    stage_clear_round_5: 0
    stage_clear_round_6: 0
    puzzle_level_1: 0
    puzzle_level_2: 0
    puzzle_level_3: 0
    puzzle_level_4: 0
    puzzle_level_5: 0
    vs_two_stages: 0

  stage_clear_goal:
    # This makes Stage Clear Last Stage Clear one of the goals.
    # If multiple modes need to be cleared, each will provide a final item and auto-hint the other win conditions.
    'false': 0
    'true': 50

  puzzle_goal:
    # This makes Puzzle and/or Extra Puzzle Round 6 Clear one of the goals.
    # If multiple modes need to be cleared, each will provide a final item and auto-hint the other win conditions.
    no_puzzle: 0
    puzzle: 50
    extra_puzzle: 0
    puzzle_and_extra_puzzle: 0
    puzzle_or_extra_puzzle: 0

  versus_goal:
    # This makes Versus one of the goals.
    # If multiple modes need to be cleared, each will provide a final item and auto-hint the other win conditions.
    # Note that harder difficulties will be forced to end at the goal difficulty's final stage.
    # If Easy Bowser is enabled for Easy or Normal, the goal becomes Stage 12 at that difficulty.
    # Stages that come after the goal stage will be extra unlocks and checks.
    no_vs: 0
    easy: 0
    normal: 50
    hard: 0
    very_hard: 0

  stage_clear_inclusion:
    # This adds Stage Clear to the randomizer, even if they are not part of the goal.
    # Note that if the Last Stage is a goal, this won't have any effect.
    'false': 50
    'true': 0

  puzzle_inclusion:
    # This adds Puzzles to the randomizer, even if they are not part of the goal.
    # Note that if (Extra) Puzzle Round 6 Clear is a goal, this won't have any effect unless the other set is not a goal.
    no_puzzle: 50
    puzzle: 0
    extra_puzzle: 0
    puzzle_and_extra_puzzle: 0

  versus_inclusion:
    # This adds Versus to the randomizer, even if they are not part of the goal.
    # Note that if clearing Versus is a goal, this won't have any effect.
    'false': 50
    'true': 0

  death_link:
    # When you die, everyone who enabled death link dies. Of course, the reverse is true too.
    'false': 50
    'true': 0

  stage_clear_mode:
    # Determines how progression works in Stage Clear.
    # Whole Rounds puts each round as one item.
    # Individual Stages puts each round as 5 progressive items. All 5 are needed to start a round.
    # Incremental puts each round as 5 progressive items with optional gate.
    # Skippable puts each round as 5 or 6 items. You can start a round with some stages locked, but all 5 stages are needed for the Round Clear.
    whole_rounds: 0
    individual_stages: 0
    incremental: 0
    incremental_with_round_gate: 50
    skippable: 0
    skippable_with_round_gate: 0

  stage_clear_filler:
    # If enabled, the game will maximize the number of locations (aside from additional Special Stages) and add more filler items to the pool.
    # Note that there are situations where filler is forced, otherwise the logic would be too tight and lead to unbeatable seeds.
    'false': 0
    'true': 50

  stage_clear_saves:
    # If enabled, Stage Clear will let you resume rounds at the first unchecked stage or the stage after the last cleared one, whichever is earlier
    'false': 0
    'true': 50

  special_stage_trap_count:
    # Adds extra locations to certain Stage Clear stages such as Round 3 Clear, but as a consequence adds the Special Stage trap.
    # When tripped, you must either win or lose the Special Stage before you can continue.
    # Requires Stage Clear to be included or as a goal.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 30
    1: 50
    random: 0
    random-low: 0
    random-high: 0

  special_stage_hp_multiplier:
    # Changes Bowser's HP to this times 100 in the Special Stage traps. Default (vanilla) is 6 (x100).
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 100
    6: 50
    random: 0
    random-low: 0
    random-high: 0

  last_stage_hp_multiplier:
    # Changes Bowser's HP to this times 100 at the Last Stage. Default (vanilla) is 6 (x100).
    # For reference, a x2 Chain does 50 damage while a x6 Chain does a total of 980 damage.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 100
    6: 50
    random: 0
    random-low: 0
    random-high: 0

  puzzle_mode:
    # Determines how progression works in Puzzle.
    # Whole Levels puts each level as one item.
    # Individual Stages puts each level as 10 progressive items. All 10 are needed to start a level.
    # Incremental puts each level as 10 progressive items with optional gate.
    # Skippable puts each level as 10 or 11 items. You can start a level with some puzzles locked, but all 10 puzzles are needed for the Round Clear.
    whole_levels: 0
    individual_stages: 0
    incremental: 0
    incremental_with_level_gate: 50
    skippable: 0
    skippable_with_level_gate: 0

  puzzle_filler:
    # If enabled, the game will maximize the number of locations and add more filler items to the pool.
    # Note that there are situations where filler is forced, otherwise the logic would be too tight and lead to unbeatable seeds.
    'false': 0
    'true': 50

  versus_mode:
    # Determines how difficulty levels are handled and which ones have locations.
    # Minimum puts locations on the minimum difficulty level required for each stage except for the last stage.
    # For example, if the goal is to beat Vs on Hard, stages 1 to 10 will still give checks on Easy.
    # If filler is included, higher difficulties for early stages are considered non-priority.
    # Minimum progressive is the same as above, but adds one set of unlocks as progressive from 1 to 10/11/12.
    # Goal puts locations on the goal difficulty level only, and also forces the game to that difficulty.
    # Goal progressive is the same as above, but adds one set of unlocks as progressive from 1 to 10/11/12.
    minimum_difficulty: 0
    minimum_progressive: 0
    goal_difficulty: 0
    goal_progressive: 50

  ###########################
  # Item & Location Options #
  ###########################
  local_items:
    # Forces these items to be in their native world.
    []

  non_local_items:
    # Forces these items to be outside their native world.
    []

  start_inventory:
    # Start with these items.
    {}

  start_hints:
    # Start with these item's locations prefilled into the ``!hint`` command.
    []

  start_location_hints:
    # Start with these locations and their item prefilled into the ``!hint`` command.
    []

  exclude_locations:
    # Prevent these locations from having an important item.
    []

  priority_locations:
    # Prevent these locations from having an unimportant item.
    []

  item_links:
    # Share part of your item pool with other players.
    []

  plando_items:
    # Generic items plando.
    []
