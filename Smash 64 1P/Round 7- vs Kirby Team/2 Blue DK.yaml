# Q. What is this file?
# A. This file contains options which allow you to configure your multiworld experience while allowing
#    others to play how they want as well.
#
# Q. How do I use it?
# A. The options in this file are weighted. This means the higher number you assign to a value, the
#    more chances you have for that option to be chosen. For example, an option like this:
#
#    map_shuffle:
#      on: 5
#      off: 15
#
#    Means you have 5 chances for map shuffle to occur, and 15 chances for map shuffle to be turned
#    off.
#
# Q. I've never seen a file like this before. What characters am I allowed to use?
# A. This is a .yaml file. You are allowed to use most characters.
#    To test if your yaml is valid or not, you can use this website:
#        http://www.yamllint.com/
#    You can also verify that your Archipelago options are valid at this site:
#        https://archipelago.gg/check

# Your name in-game, limited to 16 characters.
#     {player} will be replaced with the player's slot number.
#     {PLAYER} will be replaced with the player's slot number, if that slot number is greater than 1.
#     {number} will be replaced with the counter value of the name.
#     {NUMBER} will be replaced with the counter value of the name, if the counter value is greater than 1.
name: Blue DK

# Used to describe your yaml. Useful if you have multiple files.
description: Default Banjo-Tooie Template

game: Banjo-Tooie
requires:
  version: 0.6.3 # Version of Archipelago required for this yaml to work as expected.

Banjo-Tooie:
  ################
  # Game Options #
  ################
  progression_balancing:
    # A system that can move progression earlier, to try and prevent the player from getting stuck and bored early.
    # 
    # A lower setting means more getting stuck. A higher setting means less getting stuck.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 99
    random: 0
    random-low: 0
    random-high: 0
    disabled: 0 # equivalent to 0
    normal: 50 # equivalent to 50
    extreme: 0 # equivalent to 99

  accessibility:
    # Set rules for reachability of your items/locations.
    # 
    # **Full:** ensure everything can be reached and acquired.
    # 
    # **Minimal:** ensure what is needed to reach your goal can be acquired.
    full: 50
    minimal: 0

  tag_link:
    # When other multiworld games tag/swap characters, you will auto swap with them and vise versa.
    'false': 50
    'true': 0

  death_link:
    # When you die, everyone who enabled death link dies. Of course, the reverse is true too.
    'false': 50
    'true': 0

  logic_type:
    # Choose your logic difficulty and difficulty of tricks you are expected to perform to reach certain areas.
    # Please be aware that if you plan on randomizing worlds with BK Moves in the pool, you cannot use "intended" logic.
    intended: 50
    easy_tricks: 0
    hard_tricks: 0
    glitches: 0

  #####################
  # Victory Condition #
  #####################
  victory_condition:
    # Choose the victory condition.
    # HAG1: Unlock the HAG1 fight and defeat Gruntilda.
    # Minigame Hunt: Clear the 14 minigames and the final Canary Mary race in Cloud Cuckcoo Land to collect Mumbo Tokens.
    # Boss Hunt: Defeat the 8 world bosses and collect their Mumbo Tokens.
    # Jinjo Family Rescue: Rescue Jinjo Families to collect their prized Mumbo Tokens.
    # Wonderwing Challenge: Collect all 32 Mumbo Tokens across all boss fights, mini games, and every Jinjo family to gain access to HAG1 and Defeat Grunty. The Ultimate Banjo Tooie experience!!
    # Token Hunt: Mumbo's Tokens are scattered around the world. Help him find them!
    # Boss Hunt + Hag1: Combines Boss Hunt with HAG-1. HAG-1 won't open until the required amount of bosses are defeated.
    hag1: 50
    minigame_hunt: 0
    boss_hunt: 0
    jinjo_family_rescue: 0
    wonderwing_challenge: 0
    token_hunt: 0
    boss_hunt_and_hag1: 0

  open_hag1:
    # HAG 1 boss fight is opened when Cauldron Keep is opened, requiring fewer Jiggies to win.
    'false': 0
    'true': 50

  minigame_hunt_length:
    # How many Mumbo Tokens are needed to clear the Minigame Hunt.
    # Choose a value between 1 and 15.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 15
    14: 50
    random: 0
    random-low: 0
    random-high: 0

  boss_hunt_length:
    # How many Mumbo Tokens are needed to clear the Boss Hunt.
    # Choose a value between 1 and 8.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 8
    8: 50
    random: 0
    random-low: 0
    random-high: 0

  jinjo_family_rescue_length:
    # How many Jinjo families' Mumbo Tokens are needed to clear the Jinjo family rescue.
    # Choose a value between 1 and 9.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 9
    9: 50
    random: 0
    random-low: 0
    random-high: 0

  tokens_in_pool:
    # How many Mumbo Tokens are in the pool.
    # If Randomize Signpost are enabled, you are allowed up to 50.
    # If Nestanity is enabled, you are allowed up to 100.
    # If neither are enabled, you are allowed up to 15.
    # Choose a value between 1 and 100.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 100
    15: 50
    random: 0
    random-low: 0
    random-high: 0

  token_hunt_length:
    # How many Mumbo Tokens you need to find to beat your game.
    # Choose a value less than or equal to the Mumbo Tokens that you have specified in the pool.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 100
    10: 50
    random: 0
    random-low: 0
    random-high: 0

  ###############
  # World Costs #
  ###############
  world_requirements:
    # Choose how quickly the worlds open.
    # quick: Worlds open at 1, 3, 6, 10, 15, 21, 28, 36, and 44 Jiggys
    # normal: Worlds open at 1, 4, 8, 14, 20, 28, 36, 45, and 55 Jiggys
    # long: Worlds open at 1, 8, 16, 25, 34, 43, 52, 60, and 70 Jiggys
    # custom: You pick when worlds open
    quick: 0
    normal: 50
    long: 0
    custom: 0
    randomize: 0

  custom_worlds:
    # Enter a list of jiggy requirements you want for each world unlock. Max values of each world are: 1,10,20,30,50,60,70,80,90.
    # This option only functions if the World Requirements option is set to custom.
    1,4,8,14,20,28,36,45,55: 50

  ####################
  # Randomized Moves #
  ####################
  randomize_bk_moves:
    # Banjo-Kazooie's Movelist are randomized.
    # Mcjiggy Special - You start with Talon Trot and Tall Jump.
    none: 50
    mcjiggy_special: 0
    all: 0

  randomize_bt_moves:
    # Jamjars' & Roysten's Movelist are randomized.
    'false': 0
    'true': 50

  jamjars_silo_costs:
    # Change how many notes it takes to use Jamjars' move silos. Requires the Banjo-Tooie move list to be randomized.
    vanilla: 50
    randomize: 0
    progressive: 0

  #####################
  # Progressive Moves #
  #####################
  egg_behaviour:
    # Change the way Eggs work. Randomize Moves and Randomize BK Moves are required.
    # Start with Blue Eggs: You start with Blue Eggs, and you must find the other 4.
    # Random Starting Egg: You start with one type of egg, and you must find the other 4.
    # Progressive Eggs: You start with blue eggs, and you find items to unlock the others in the vanilla order.
    # Simple Random Start Egg: You start with one type of egg that is not Clockwork Kazooie Eggs, and you must find the other 4.
    start_with_blue_eggs: 50
    random_starting_egg: 0
    progressive_eggs: 0
    simple_random_starting_egg: 0

  progressive_beak_buster:
    # Beak Buster to Bill Drill. Randomize Moves and Randomize BK Moves are required.
    'false': 50
    'true': 0

  progressive_shoes:
    # Stilt Stride to Turbo Trainers to Springy Step Shoes to Claw Clamber Boots. Randomize Moves and Randomize BK Moves are required.
    'false': 50
    'true': 0

  progressive_water_training:
    # Basic: Dive to Double Air to Faster Swimming.
    # Advanced: Dive to Sub Aqua Aiming to Talon Torpedo to Double Air to Faster Swimming.
    # Randomize Moves and Randomize BK Moves are required.
    none: 50
    basic: 0
    advanced: 0

  progressive_flight:
    # Flight Pad to Beak Bomb to Airborne Egg Aim. Randomize Moves and Randomize BK Moves are required.
    'false': 50
    'true': 0

  progressive_egg_aiming:
    # Basic: Third Person Egg Shooting to Egg Aim.
    # Advanced: Third Person Egg Shooting to Amaze-O-Gaze to Egg Aim to Breegull Blaster.
    # Randomize Moves and Randomize BK Moves are required.
    none: 50
    basic: 0
    advanced: 0

  progressive_bash_attack:
    # Ground Rat-a-tat Rap to Breegull Bash. Randomize Stop N Swap and Randomize BK Moves are required
    'false': 50
    'true': 0

  #############
  # Item Pool #
  #############
  randomize_notes:
    # Note Nests are randomized.
    'false': 50
    'true': 0

  randomize_treble:
    # Treble Clefs are randomized.
    'false': 0
    'true': 50

  extra_trebleclefs_count:
    # Convert four 5 note nests into Treble Clefs (20 notes), and adds 3 per additional Treble Clef.
    # Randomize Notes is required.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 21
    0: 50
    random: 0
    random-low: 0
    random-high: 0

  bass_clef_amount:
    # Convert two 5 note nests into Bass Clefs (10 notes), and adds 1 filler per Bass Clef.
    # Randomize Notes is required.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 30
    0: 50
    random: 0
    random-low: 0
    random-high: 0

  randomize_jinjos:
    # Jinjos have fled to other worlds. Other players need to return them home.
    'false': 0
    'true': 50

  randomize_doubloons:
    # Jolly Roger's Doubloons are randomized.
    'false': 50
    'true': 0

  randomize_cheato:
    # Cheato pages are randomized.
    'false': 0
    'true': 50

  cheato_rewards:
    # Cheato Rewards are added to the pool.
    'false': 0
    'true': 50

  randomize_honeycombs:
    # Honeycombs are randomized.
    'false': 0
    'true': 50

  honeyb_rewards:
    # Health Upgrades are added to the pool.
    'false': 0
    'true': 50

  randomize_tickets:
    # Big Top Tickets are randomized.
    'false': 0
    'true': 50

  randomize_green_relics:
    # Targitzan's Green Relics are randomized.
    'false': 0
    'true': 50

  randomize_beans:
    # CCL Beans are randomized.
    'false': 0
    'true': 50

  randomize_glowbos:
    # Mumbo and Humba Magic are in the pool and automatically unlocked when received.
    # When disabled, collecting a Glowbo will give you either a Mumbo or Humba Magic.
    'false': 0
    'true': 50

  randomize_stop_n_swap:
    # Mystery Eggs, their rewards, and the Ice Key are scattered across the MultiWorld.
    'false': 50
    'true': 0

  randomize_dino_roar:
    # Baby T-Rex's Roar is lost across the MultiWorld. Other players need to help him learn to ROAR!
    'false': 50
    'true': 0

  nestsanity:
    # Eggs and feather nests give checks when you collect them for the first time. They behave as regular egg nests after they have been collected.
    'false': 50
    'true': 0

  randomize_signposts:
    # Signposts give items when read.
    'false': 50
    'true': 0

  ###################################
  # Overworld and Level Exploration #
  ###################################
  randomize_stations:
    # Train Stations are randomized.
    'false': 50
    'true': 0

  randomize_chuffy:
    # Chuffy is randomized.
    # Once received, you can call Chuffy at any unlocked station before defeating Old King Coal.
    'false': 50
    'true': 0

  randomize_warp_pads:
    # Warp Pads give checks when tagging them. They can only be used once you receive the corresponding item to use a warp pad.
    'false': 50
    'true': 0

  randomize_silos:
    # Overworld silos give checks when tagging them. They can only be used once you receive the corresponding item to use a silo.
    'false': 50
    'true': 0

  open_silos:
    # Choose how many overworld silos are pre-opened.
    # If you have Randomized Worlds, pre-opened silos are guaranteed to lead to the first world.
    # If you enabled Randomized Worlds with BK Moves randomized, you must have at least 2 silos opened.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 7
    2: 50
    random: 0
    random-low: 0
    random-high: 0

  skip_puzzles:
    # Open world entrances without having to go to Jiggywiggy.
    'false': 0
    'true': 50

  randomize_worlds:
    # Worlds will open in a randomized order. Randomized Moves and Skip Puzzles required.
    'false': 50
    'true': 0

  randomize_world_entrance_loading_zone:
    # The main entrance of each world will warp you to a random world.
    'false': 50
    'true': 0

  randomize_boss_loading_zone:
    # The entrance of each boss will warp you to a random boss.
    'false': 50
    'true': 0

  backdoors:
    # Opens many one-way switches on game start, allowing for more backdoor access to levels.
    # The following gates are preopened: MT -> TDL, MT -> HFP, GGM -> WW, WW -> TDL.
    # For MT -> TDL, only the gate accessed from TDL's side is opened. For GGM -> WW, the boulders are still intact.
    # The bridge from HFP's entrance is pre-moved to allow secondary access to Cliff Top.
    # George is pre-dropped to make HFP -> JRL more accessible.
    'false': 50
    'true': 0

  open_gi_frontdoor:
    # Opens Grunty's Industries frontdoor without requiring to get in first.
    'false': 50
    'true': 0

  ##################
  # Signpost Hints #
  ##################
  signpost_hints:
    # Choose how many signpost give a hint when read.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 61
    0: 50
    random: 0
    random-low: 0
    random-high: 0

  signpost_move_hints:
    # Choose how many signposts, out of the signposts that contain a hint, will hint for one of your moves.
    # The rest of the hints will hint slow locations.
    # Silos and BT moves will not be hinted if randomize_bt_moves is not enabled.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 61
    20: 50
    random: 0
    random-low: 0
    random-high: 0

  hint_clarity:
    # Choose how clear hints are.
    # Cryptic: hints will only tell you how good the item is.
    # Clear: hints will tell you what the item is.
    cryptic: 0
    clear: 50

  add_signpost_hints_to_ap:
    # Choose if a signpost hint is added to the Archipelago hints upon reading the hint.
    # Due to a limitation, only your own locations will be added as hints; your items in
    # other people worlds won't be hinted.
    # Never: signpost hints are never added
    # Progression: hints are added only if the hinted location has a progression item.
    # Always: hints are always added.
    # This option only has an effect if signpost hints are enabled.
    never: 0
    progression: 50
    always: 0

  ###################
  # Quality of Life #
  ###################
  easy_canary:
    # Makes Canary Mary Races much easier.
    'false': 0
    'true': 50

  speed_up_minigames:
    # Start 3-round minigames at Round 3.
    'false': 0
    'true': 50

  tower_of_tragedy:
    # Choose whether to play the full quiz, start at round 3, or skip it.
    full: 0
    skip: 50
    round_3: 0

  skip_klungo:
    # Make it so you can skip Klungo 1 and 2.
    'false': 50
    'true': 0

  auto_enable_cheats:
    # When Feathers and Eggs cheats are found, only enable them automatically when received.
    'false': 50
    'true': 0

  extra_cheats:
    # Extra cheats will be added to the "CHEATS" sub-menu:
    # NESTKING  - Infinite eggs/feathers.
    # HONEYKING - Infinite health/air.
    # SUPERBANJO - Gotta go fast!
    # SUPERBADDY - They gotta go fast!
    'false': 50
    'true': 0

  jingaling_jiggy:
    # King Jingaling will always have a Jiggy for you.
    'false': 0
    'true': 50

  ###########
  # Fillers #
  ###########
  replace_extra_jiggies:
    # Jiggies over the maximum needed to beat the seed (plus a generous buffer) are replaced by fillers/traps.
    # If turned off, you are guranteed exactly 90 jiggies.
    # You can control how likely extra jiggies show up as fillers by extra_jiggies_weight.
    'false': 0
    'true': 50

  replace_extra_notes:
    # Notes over the maximum needed to beat the seed (plus a generous buffer) are replaced by fillers/traps.
    # If turned off, you are guranteed exactly 900 notes in total.
    # You can control how likely extra notes show up as fillers by extra_notes_weight.
    'false': 0
    'true': 50

  extra_jiggies_weight:
    # The weight of Jiggies in the filler pool. Requires replace_extra_jiggies.
    # You are guarenteed enough jigges to open all levels. These are extra.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    15: 50
    random: 0
    random-low: 0
    random-high: 0

  extra_notes_weight:
    # The weight of 5 pack notes in the filler pool. Requires randomize_notes and replace_extra_notes.
    # You are guarenteed enough notes to open all jamjars silos. These are extra.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    10: 50
    random: 0
    random-low: 0
    random-high: 0

  extra_doubloons_weight:
    # The weight of extra doubloons in the filler pool. Requires randomize_doubloons.
    # You are guarenteed the original 30 doubloons. These are extra.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    10: 50
    random: 0
    random-low: 0
    random-high: 0

  egg_nests_weight:
    # The weight of Egg nests in the filler pool. The weight is doubled if nestsanity is on.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    30: 50
    random: 0
    random-low: 0
    random-high: 0

  feather_nests_weight:
    # The weight of Egg nests in the filler pool. The weight is doubled if nestsanity is on.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    15: 50
    random: 0
    random-low: 0
    random-high: 0

  big_o_pants_weight:
    # The weight of Big-O-Pants (nothing) in the filler pool.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    5: 50
    random: 0
    random-low: 0
    random-high: 0

  golden_eggs_weight:
    # The weight of Golden Eggs in the filler pool.
    # You are forced to use Golden Eggs for a minute upon receiving the trap.
    # Requires Max Traps to be nonzero to have an effect
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    25: 50
    random: 0
    random-low: 0
    random-high: 0

  trip_trap_weight:
    # The weight of Trip Traps in the filler pool.
    # You trip upon receiving the trap.
    # Requires Max Traps to be nonzero to have an effect
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    30: 50
    random: 0
    random-low: 0
    random-high: 0

  slip_trap_weight:
    # The weight of Slip Traps in the filler pool.
    # You slip upon receiving the trap.
    # Requires Max Traps to be nonzero to have an effect
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    30: 50
    random: 0
    random-low: 0
    random-high: 0

  transform_trap_weight:
    # The weight of Transform Traps in the filler pool.
    # A transformation animation upon receiving the trap.
    # Requires Max Traps to be nonzero to have an effect
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    30: 50
    random: 0
    random-low: 0
    random-high: 0

  squish_trap_weight:
    # The weight of Squish Traps in the filler pool.
    # Stomponadon attempts to squish you upon receiving the trap.
    # Requires Max Traps to be nonzero to have an effect
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    15: 50
    random: 0
    random-low: 0
    random-high: 0

  tip_trap_weight:
    # The weight of Tip Traps in the filler pool.
    # You receive a random textbox upon receiving the trap.
    # Requires Max Traps to be nonzero to have an effect
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    20: 50
    random: 0
    random-low: 0
    random-high: 0

  max_traps:
    # The maximum possible amount of traps that replace fillers in the pool.
    # Notice that the real number of traps is limited by the number of fillers in the pool, which varies depending on your settings.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    random: 0
    random-low: 0
    random-high: 0
    none: 50 # equivalent to 0
    light: 0 # equivalent to 15
    moderate: 0 # equivalent to 30
    mayhem: 0 # equivalent to 70
    unlimited: 0 # equivalent to 99999

  ##############
  # Aesthetics #
  ##############
  dialog_character:
    # Change the character that announces your obtained moves, worlds, etc.
    glowbo: 0
    jiggy: 0
    honeycomb: 0
    sub: 0
    washer: 0
    banjo: 0
    kazooie: 0
    bottles: 0
    mumbo: 0
    jinjo_yellow: 0
    jinjo_green: 0
    jinjo_blue: 0
    jinjo_purple: 0
    jinjo_orange: 0
    beehive: 0
    grunty: 0
    zubba: 0
    jamjars: 0
    bovina: 0
    minjo_white: 0
    minjo_orange: 0
    minjo_yellow: 0
    minjo_brown: 0
    unogopaz: 0
    chief_bloatazin: 0
    dilberta: 0
    stonies1: 0
    canary_mary: 0
    cheato: 0
    gobi: 0
    dino_kid1: 0
    mr_patch: 0
    moggy: 0
    soggy: 0
    groggy: 0
    mrs_boggy: 0
    prospector: 0
    humba: 0
    ufo: 0
    old_king_coal: 0
    ssslumber: 0
    boggy: 0
    big_al: 0
    salty_joe: 0
    conga: 0
    pawno: 0
    tiptup: 0
    jolly: 0
    merry_maggie: 0
    terry: 0
    bargasaurus: 0
    yellow_stony: 0
    alien: 0
    chris_p_bacon: 0
    captain_blubber: 0
    styracosaurus_mom: 0
    roysten: 0
    safe: 0
    guffo: 0
    mr_fit: 0
    captain_blackeye: 0
    jinjo_red: 0
    jinjo_white: 0
    jinjo_black: 0
    jinjo_brown: 0
    chilly_willy: 0
    chilli_billi: 0
    mingy_jongo: 0
    yellow_dodgem: 0
    mingella: 0
    blobbelda: 0
    klungo: 0
    bottles_dead: 0
    minjo_green: 0
    minjo_red: 0
    minjo_blue: 0
    minjo_purple: 0
    minjo_black: 0
    rabbit_worker1: 0
    unga_bunga: 0
    jiggywiggy: 0
    jiggywiggy_disciple: 0
    honey_b: 0
    banjo_kazooie: 0
    pig1: 0
    oogle_boogle: 0
    gi_announcer: 0
    dingpot: 0
    king_jingaling_dead: 0
    rocknut: 0
    mildred: 0
    bigga_foot: 0
    george: 0
    sabreman: 0
    dippy: 0
    loggo: 0
    king_jingaling: 0
    mrs_bottles: 0
    speccy: 0
    goggles: 0
    targitzan: 0
    chompa: 0
    lord_woo_fak_fak: 0
    weldar: 0
    alien_child: 0
    evil_bottles: 0
    dino_kid2: 0
    dino_scrit_small: 0
    dino_scrit_big: 0
    heggy: 0
    default_icons: 50
    complete_random: 0

  ###########################
  # Item & Location Options #
  ###########################
  local_items:
    # Forces these items to be in their native world.
    []

  non_local_items:
    # Forces these items to be outside their native world.
    []

  start_inventory:
    # Start with these items.
    {}

  start_inventory_from_pool:
    # Start with these items and don't place them in the world.
    # 
    # The game decides what the replacement items will be.
    {}

  start_hints:
    # Start with these item's locations prefilled into the ``!hint`` command.
    []

  start_location_hints:
    # Start with these locations and their item prefilled into the ``!hint`` command.
    []

  exclude_locations:
    # Prevent these locations from having an important item.
    []

  priority_locations:
    # Prevent these locations from having an unimportant item.
    []

  item_links:
    # Share part of your item pool with other players.
    []

  plando_items:
    # Generic items plando.
    []

