# Q. What is this file?
# A. This file contains options which allow you to configure your multiworld experience while allowing
#    others to play how they want as well.
#
# Q. How do I use it?
# A. The options in this file are weighted. This means the higher number you assign to a value, the
#    more chances you have for that option to be chosen. For example, an option like this:
#
#    map_shuffle:
#      on: 5
#      off: 15
#
#    Means you have 5 chances for map shuffle to occur, and 15 chances for map shuffle to be turned
#    off.
#
# Q. I've never seen a file like this before. What characters am I allowed to use?
# A. This is a .yaml file. You are allowed to use most characters.
#    To test if your yaml is valid or not, you can use this website:
#        http://www.yamllint.com/
#    You can also verify that your Archipelago options are valid at this site:
#        https://archipelago.gg/check

# Your name in-game, limited to 16 characters.
#     {player} will be replaced with the player's slot number.
#     {PLAYER} will be replaced with the player's slot number, if that slot number is greater than 1.
#     {number} will be replaced with the counter value of the name.
#     {NUMBER} will be replaced with the counter value of the name, if the counter value is greater than 1.
name: Gale Seed

# Used to describe your yaml. Useful if you have multiple files.
description: Default The Legend of Zelda - Oracle of Seasons Template

game: The Legend of Zelda - Oracle of Seasons
requires:
  version: 0.6.3 # Version of Archipelago required for this yaml to work as expected.

The Legend of Zelda - Oracle of Seasons:
  ################
  # Game Options #
  ################
  progression_balancing:
    # A system that can move progression earlier, to try and prevent the player from getting stuck and bored early.
    # 
    # A lower setting means more getting stuck. A higher setting means less getting stuck.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 99
    random: 0
    random-low: 0
    random-high: 0
    75: 50
    disabled: 0 # equivalent to 0
    normal: 0 # equivalent to 50
    extreme: 0 # equivalent to 99

  accessibility:
    # Set rules for reachability of your items/locations.
    # 
    # **Full:** ensure everything can be reached and acquired.
    # 
    # **Minimal:** ensure what is needed to reach your goal can be acquired.
    full: 50
    minimal: 0

  goal:
    # The goal to accomplish in order to complete the seed.
    # - Beat Onox: beat the usual final boss (same as vanilla)
    # - Beat Ganon: teleport to the Room of Rites after beating Onox, then beat Ganon (same as linked game)
    beat_onox: 50
    beat_ganon: 0

  logic_difficulty:
    # The difficulty of the logic used to generate the seed.
    # - Casual: expects you to know what you would know when playing the game for the first time
    # - Medium: expects you to know well the alternatives on how to do basic things, but won't expect any trick
    # - Hard: expects you to know difficult tricks such as bomb jumps
    casual: 50
    medium: 0
    hard: 0

  required_essences:
    # The amount of essences that need to be obtained in order to get the Maku Seed from the Maku Tree and be able
    # to fight Onox in his castle
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 8
    8: 50
    random: 0
    random-low: 0
    random-high: 0

  default_seasons:
    # The world of Holodrum is split in regions, each one having its own default season being forced when entering it.
    # This options gives several ways of manipulating those default seasons.
    # - Vanilla: default seasons for each region are the ones from the original game
    # - Randomized: each region has its own random default season picked at generation time
    # - Random Singularity: a single season is randomly picked and put as default season in every region in the game
    # - Specific Singularity: the given season is put as default season in every region in the game
    vanilla: 0
    randomized: 50
    random_singularity: 0
    spring_singularity: 0
    summer_singularity: 0
    winter_singularity: 0
    autumn_singularity: 0

  normalize_horon_village_season:
    # In the vanilla game, Horon Village default season is chaotic: every time you enter it, it sets a random season.
    # This nullifies every condition where a season is required inside Horon Village, since you can leave and re-enter
    # again and again until you get the season that suits you.
    # Enabling this option disables that behavior and makes Horon Village behave like any other region in the game.
    # This means it will have a default season picked at generation time that follows the global behavior defined
    # in the "Default Seasons" option.
    'false': 0
    'true': 50

  animal_companion:
    # Determines which animal companion you can summon using the Flute, as well as the layout of the Natzu region.
    # - Ricky: the kangaroo with boxing skills
    # - Dimitri: the swimming dinosaur who can eat anything
    # - Moosh: the flying blue bear with a passion for Spring Bananas
    ricky: 0
    dimitri: 0
    moosh: 0
    random: 50

  default_seed:
    # Determines which of the 5 seed types will be the "default seed type", which is given:
    # - when obtaining Seed Satchel
    # - when obtaining Slingshot
    # - by Horon Seed Tree
    ember: 0
    scent: 0
    pegasus: 0
    gale: 50
    mystery: 0

  duplicate_seed_tree:
    # The game contains 6 seed trees but only 5 seed types, which means two trees
    # must contain the same seed type. This option enables choosing which tree will
    # always contain a duplicate of one of the other 5 trees.
    # It is strongly advised to set this to "Tarm Ruins Tree" since it's by far the hardest tree to reach
    # (and being locked out of a useful seed type can lead to very frustrating situations).
    horon_village: 0
    woods_of_winter: 0
    north_horon: 0
    spool_swamp: 0
    sunken_city: 0
    tarm_ruins: 50

  shuffle_dungeons:
    # If enabled, each dungeon entrance will lead to a random dungeon picked at generation time.
    # Otherwise, all dungeon entrances lead to their dungeon as intended.
    'false': 50
    'true': 0

  remove_d0_alt_entrance:
    # If enabled, remove the hole acting as an alternate entrance to Hero’s Cave. Stairs will be added inside the dungeon to make the chest reachable.
    # This is especially useful when shuffling dungeons, since only main dungeon entrances are shuffled.
    # If this option is not set in such a case, you could potentially have two distant entrances leading to the same dungeon.
    'false': 50
    'true': 0

  remove_d2_alt_entrance:
    # If enabled, remove both stairs acting as alternate entrances to Snake’s Remains and connect them together inside the dungeon.
    # This is especially useful when shuffling dungeons, since only main dungeon entrances are shuffled.
    # If this option is not set in such a case, you could potentially have two distant entrances leading to the same dungeon.
    'false': 50
    'true': 0

  shuffle_portals:
    # - Vanilla: pairs of portals are the same as in the original game
    # - Shuffle Outwards: each portal is connected to a random portal in the opposite dimension picked at generation time
    # - Shuffle: each portal is connected to a random portal, which might be in the same dimension (with the guarantee of
    #   having at least one portal going across dimensions)
    vanilla: 50
    shuffle_outwards: 0
    shuffle: 0

  shuffle_old_men:
    # Determine how the Old Men which give or take rupees are handled by the randomizer.
    # - Vanilla: Each Old Man gives/takes the amount of rupees it usually does in the base game
    # - Shuffled Values: The amount of given/taken rupees are shuffled between Old Men
    # - Random Values: Each Old Man will give or take a random amount of rupees
    # - Random Positive Values: Each Old Man will give a random amount of rupees, but never make you pay
    # - Turn Into Locations: Each Old Man becomes a randomized check, and the total amount of rupees they usually give
    #   in vanilla is shuffled into the item pool
    vanilla: 0
    shuffled_values: 0
    random_values: 0
    random_positive_values: 50
    turn_into_locations: 0

  shuffle_golden_ore_spots:
    # This option adds the 7 hidden digging spots in Subrosia (containing 50 Ore Chunks each) to the pool
    # of randomized locations.
    'false': 50
    'true': 0

  shuffle_essences:
    # If enabled, essences will be shuffled anywhere in the multiworld instead of being guranteed to be found
    # at the end their respective dungeons.
    'false': 50
    'true': 0

  master_keys:
    # - Disabled: All dungeon keys must be obtained individually, just like in vanilla
    # - All Small Keys: Small Keys are replaced by a single Master Key for each dungeon which is capable of opening
    #   every small keydoor for that dungeon
    # - All Dungeon Keys: the Master Key for each dungeon is also capable of opening the boss keydoor,
    #   removing Boss Keys from the item pool
    # Master Keys placement is determined following the "Keysanity (Small Keys)" option.
    disabled: 50
    all_small_keys: 0
    all_dungeon_keys: 0

  keysanity_small_keys:
    # If enabled, dungeon Small Keys can be found anywhere instead of being confined in their dungeon of origin.
    'false': 50
    'true': 0

  keysanity_boss_keys:
    # If enabled, dungeon Boss Keys can be found anywhere instead of being confined in their dungeon of origin.
    'false': 50
    'true': 0

  keysanity_maps_compasses:
    # If enabled, Dungeon Maps and Compasses can be found anywhere instead of being confined in their dungeon of origin.
    'false': 50
    'true': 0

  treehouse_old_man_requirement:
    # The amount of essences that you need to bring to the treehouse old man for him to give his item.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 8
    5: 50
    random: 0
    random-low: 0
    random-high: 0

  tarm_gate_required_jewels:
    # The number of jewels that you need to bring to Tarm Ruins gate to be able to open it.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 4
    4: 50
    random: 0
    random-low: 0
    random-high: 0

  golden_beasts_requirement:
    # The amount of golden beasts that need to be beaten for the golden old man to give his item.
    # Golden beasts are 4 unique enemies that appear at specific spots on specific seasons, and beating all four of them
    # requires all seasons and having access to most of the overworld.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 4
    1: 50
    random: 0
    random-low: 0
    random-high: 0

  sign_guy_requirement:
    # In Subrosia, a NPC will "punish" you if you break more than 100 signs in the vanilla game by giving you an item.
    # This option lets you configure how many signs are required to obtain that item, since breaking 100 signs is not
    # everyone's cup of tea.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 250
    10: 50
    random: 0
    random-low: 0
    random-high: 0

  randomize_lost_woods_item_sequence:
    # If enabled, the secret sequence leading to the Noble Sword pedestal will be randomized (both directions to
    # take and seasons to use).
    # To know the randomized combination, you will need to bring the Phonograph to the Deku Scrub near the stump, just
    # like in the vanilla game.
    'false': 0
    'true': 50

  randomize_lost_woods_main_sequence:
    # If enabled, the secret sequence leading to D6 sector will be randomized (both directions to take and
    # seasons to use).
    # To know the randomized combination, you will need to stun the Deku Scrub near the jewel gate using a shield, just
    # like in the vanilla game.
    'false': 50
    'true': 0

  randomize_samasa_gate_code:
    # This option defines if the secret combination which opens the gate to Samasa Desert should be randomized.
    # You can then configure the length of the sequence with the next option.
    'false': 50
    'true': 0

  samasa_gate_code_length:
    # The length of the randomized combination for Samasa Desert gate.
    # This option has no effect if "Randomize Samasa Desert Gate Code" is disabled.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 40
    8: 50
    random: 0
    random-low: 0
    random-high: 0

  deterministic_gasha_locations:
    # When set to a non-zero value, planting a Gasha tree on a unique soil gives a deterministic item which is taken
    # into account by logic. Once an item has been obtained this way, the soil disappears forever to avoid any chance
    # of softlocking by wasting several Gasha Seeds on the same soil.
    # The value of this option is the number of items that can be obtained that way, the maximum value expecting you
    # to plant a tree on each one of the 16 Gasha spots in the game.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 16
    0: 50
    random: 0
    random-low: 0
    random-high: 0

  remove_useless_rings:
    # If enabled, this option prevents useless rings from being shuffled in the item pool.
    # Both rings with no effect and rings providing maluses are considered useless.
    'false': 0
    'true': 50

  shop_prices_factor:
    # A factor (expressed as percentage) that will be applied to all prices inside all shops in the game.
    # - Setting it at 10% will make all items almost free
    # - Setting it at 500% will make all items horrendously expensive, use at your own risk!
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 10
    # Maximum value is 500
    100: 50
    random: 0
    random-low: 0
    random-high: 0

  advance_shop:
    # In the vanilla game, there is a house northwest of Horon Village hosting the secret "Advance Shop" that can only
    # be accessed if the game is being played on a Game Boy Advance console.
    # If enabled, this option makes this shop always open, adding 3 shop locations to the game (and some rupees to the
    # item pool to compensate for the extra purchases that might be required)
    'false': 50
    'true': 0

  fools_ore:
    # In the vanilla game, the Fool's Ore is the item "given" by the strange brothers in "exchange" for your feather.
    # The way the vanilla game is done means you never get to use it, but it's by far the strongest weapon in the game
    # (dealing 4 times more damage than an L-2 sword!)
    # - Vanilla: Fool's Ore appears in the item pool with its stats unchanged
    # - Balanced: Fool's Ore appears in the item pool but its stats are lowered to become comparable to an L-2 sword
    # - Excluded: Fool's Ore doesn't appear in the item pool at all. Problem solved!
    vanilla: 0
    balanced: 50
    excluded: 0

  warp_to_start:
    # When enabled, you can warp to start by pressing A+B during the whiteout of the screen leading to inventory or
    # map menu.
    # This can be used to make backtracking a bit more bearable in seeds where Gale Seeds take time to obtain and prevent
    # most softlock situations from happening
    'false': 0
    'true': 50

  enforce_potion_in_shop:
    # When enabled, you are guaranteed to have a renewable Potion for 300 rupees inside Horon shop
    'false': 50
    'true': 0

  combat_difficulty:
    # Modifies the damage taken during combat to make this aspect of the game easier or harder depending on the
    # type of experience you want to have
    peaceful: 0
    easier: 0
    vanilla: 50
    harder: 0
    insane: 0

  quick_flute:
    # When enabled, playing the flute will immobilize you during a very small amount of time compared to vanilla game.
    'false': 0
    'true': 50

  starting_maps_compasses:
    # When enabled, you will start the game with maps and compasses for every dungeon in the game.
    # This makes navigation easier and removes those items for the pool, which are replaced with random filler items.
    # Unlike 'start_inventory_from_pool', this is performed instanatly and silently when starting the game.
    'false': 50
    'true': 0

  remove_items_from_pool:
    # Removes specified amount of given items from the item pool, replacing them with random filler items.
    # This option has significant chances to break generation if used carelessly, so test your preset several times
    # before using it on long generations. Use at your own risk!
    {}

  death_link:
    # When you die, everyone who enabled death link dies. Of course, the reverse is true too.
    'false': 50
    'true': 0

  ###########################
  # Item & Location Options #
  ###########################
  local_items:
    # Forces these items to be in their native world.
    []

  non_local_items:
    # Forces these items to be outside their native world.
    []

  start_inventory:
    # Start with these items.
    {Gale Seed}

  start_inventory_from_pool:
    # Start with these items and don't place them in the world.
    # 
    # The game decides what the replacement items will be.
    {
    Seed Satchel,
    Slingshot
    }

  start_hints:
    # Start with these item's locations prefilled into the ``!hint`` command.
    []

  start_location_hints:
    # Start with these locations and their item prefilled into the ``!hint`` command.
    []

  exclude_locations:
    # Prevent these locations from having an important item.
    []

  priority_locations:
    # Prevent these locations from having an unimportant item.
    []

  item_links:
    # Share part of your item pool with other players.
    []

  plando_items:
    # Generic items plando.
    []


